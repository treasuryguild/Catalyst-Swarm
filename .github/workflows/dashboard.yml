name: Build Dashboard

on:
  workflow_dispatch:
  schedule:
  - cron: 0 0 * * 6
env: 
  Repo: "treasuryguild/Catalyst-Swarm"
  RepoName: "Catalyst Swarm" 
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Check out GitHub Pages branch
      uses: actions/checkout@v2
      with:
        ref: 'gh-pages'
        path: 'out'

    - name: 'Generate Dashboard'
      uses: ethomson/issue-dashboard@v1
      with:
        config: |
          title: '${{ env.RepoName }} Transactions Dashboard'
          output:
            format: html
            filename: 'out/index.html'
          setup: |
            userdata.color_func = function(num) {
              if (num < 6) return 'green'
              if (num > 10) return 'red'
              return 'yellow'
            }
            userdata.num = 0
            
          sections:
          - title: 'TEst'
            description: 'Testing out Dashboard'
            widgets:
            - type: number
              script: |
                const repo = "${{ env.Repo }}"
                const results = await github.search.issuesAndPullRequests({
                  q: `repo:${repo} is:issue Incoming in:body is:closed`
                })
                const count = results.data.total_count
                const title = 'Number of IOG instalments'
                const color = (count > 10) ? 'red' : 'green'
                return { value: count, title: title, color: color }
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:issue closed:>{{ date("-30 days") }}'
              title: 'Closed issues this month'
              color: 'green'
          - title: 'All time status'
            description: 'Total Issues opened and closed'
            widgets:
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:issue created:<{{ date("1 days") }}'
              title: 'Opened issues'
              color: 'red'
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:issue closed:<{{ date("1 days") }}'
              title: 'Closed issues'
              color: 'green'
          - title: 'Updated Issues'
            description: 'Total issues that received updates'
            widgets:
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:open is:issue updated:{{ date("-60 days") }}..{{ date("-30 days") }}'
              title: 'Last month'
              color: 'yellow'
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:open is:issue updated:>{{ date("-30 days") }}'
              title: 'This month'
              color: 'blue'
          - title: 'Issue comments'
            description: 'Total issues that received comments'
            widgets:
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:open is:issue comments:>0 updated:{{ date("-60 days") }}..{{ date("-30 days") }}'
              title: 'Last month'
              color: 'yellow'
            - type: number
              issue_query: 'repo:${{ env.Repo }} is:open is:issue comments:>0 updated:>{{ date("-30 days") }}'
              title: 'This month'
              color: 'blue'
          - title: 'Circles'
            description: 'TEst chart'
            widgets:
            - type: graph
              title: 'Circle groups'
              elements:
              - title: 'Test 1'
                issue_query: 'repo:${{ env.Repo }} is:open is:issue label:"General Voters" created:<{{ date("1 days") }}'
                color: 'green'
              - title: 'Test 2'
                issue_query: 'repo:${{ env.Repo }} is:open is:issue label:"General Voters" created:<{{ date("-30 days") }}'
                color: 'blue'
              - title: 'Test 3'
                issue_query: 'repo:${{ env.Repo }} is:open is:issue label:"Community Advisor" created:<{{ date("1 days") }}'
                color: 'green'
              - title: 'Test 4'
                issue_query: 'repo:${{ env.Repo }} is:open is:issue label:"Community Advisor" created:<{{ date("-30 days") }}'
                color: 'blue'
                                            
        token: ${{ github.token }}

    - name: Publish Documentation
      run: |
        git add .
        git config user.name 'Dashboard User'
        git config user.email 'nobody@nowhere'
        git commit -m 'Documentation update' --allow-empty
        git push origin gh-pages
      working-directory: out
